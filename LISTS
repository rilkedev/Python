========================================================================================================================
Lists:

List: 
> my_list = [1, 2, 4, 3, 2] 

>Can hold multiple data-types: my_list = ["Hello", False, 4, 2.2] 
	
Removing and Deleting:
-----------------------
>Length of List
	mySeq = [2,3,4,1]
	length = len(mySeq)
	print(length);
	
> Access any element
	my_list = [4,2,8, "hello"]
	item = my_list[1]
	print(item)
	
> Change content of item in list
		my_list = [4,2,8, "hello"]
		my_list[1] = 4
		print(my_list)

>append to list (add item to end)
		my_list = [4,2,8]
		my_list.append(9)
		print(my_list)

>append a list within a list
	my_list = [4,2,8, "hello"]
	my_list.append([8,8,8])
	print(my_list)

>Remove item from end
		my_list = [4,2,8, "hello"]
		my_list.pop()
		print(my_list)
		//returns [4,2,8]
		
>Remove at specified index
	list = [4,2,9,1]
	list.remove(2)
	print(list)
		
> Removes the first matching element (which is passed as an argument) from the list.
		prime_numbers = [2, 3, 5, 7, 9, 11]
		# remove 9 from the list
		prime_numbers.remove(9)

>Index of first occurance of item
		myStr = "Hippo"
		index = myStr.index("p");
		print(index);
	
> Index of first occurence of item in list
		list = [4,3,1,9];
		index = list.index(3);
		print(index); 
		
> Copying list
		seq = [4, 2, 4, 1]
		numbers = seq.copy() 
		print(numbers)
		

@Iterating Over List O(N) 
---------------------------
>Use for each loop to iterate over a sequence (list)
	seq = ["girl", "boy", "hybrid"]
	for item in seq:
		 print(item)

>Use regular for each to iterate over sequence using len() property 
		my_list = [4, 2, 4, 2, 1]
	for index in range(len(my_list)):
			print(my_list[index])
		//outputs each item in list 

>Use regular for loop to iterate over sequence, but only until second to last element 
		my_list = [4, 2, 4, 2, 1]
		for index in range(len(my_list)):
				print(my_list[index])
		//outputs each item in list except second to last element 
		
>Sum of sequence using for-each
	sum = 0;
	list = [4, 2, 1, 6];
	for item in list:
		sum += item;
	print(sum);

>Sum of sequence using sum()
	#Sum of list using for-each loop
	list = [4, 2, 1, 6];
	answer = sum(list);
	print(answer);
	
>Sum of a partial sequence (portion)
	mySeq = [4,2,1,8,3]
	answer = sum(mySeq[1:4])
	print(answer)
	
>Sum of everything after Xth index
	mySeq = [4,2,1,9];
	answer = sum(mySeq[1:])
	print(answer)
	
>Multiply Lists
	list1 = [3,2,4,1];
	list2 = list1[1:3] *3;
	print(list2);
	//prints [2 4 2 4 2 4]
	
> Extracting sub-list
	list = [4,2,3,1]
	print(list[0: -1])
	//prints [4,2,3]

> Q: If "A" exists in list, print False.
list = ["A", "B", "C"]
bool = True;
for item in list:
	if item == "A":
	bool = False;
print(bool);

> Q: Make a function that takes a list as a parameter and returns the sum
def count(random_list):
	sum = 0
	for item in random_list:
		sum += item
	return sum
#Execution 
my_list = [4,2,6]
sum = count(my_list)
print(sum)

> Q: Given my_list = ["berry", 2, 0] achieve
[0, 2, "berry"]
//save first element in temp variable
//set first to last
//set last to temp
//print
temp = my_list[0]
my_list[0] = my_list[2]
my_list[2] = temp
print(my_list)

> Q: add all numbers that are a multiple of three
list = [1,2,3,4,5,6,7,8]
	total = 0
	for e in list:
	if e % 3 == 0:
	total += e
	print(total)

> Q: add all numbers that are a multiple of three between 1 and 8
	total = 0
	for e in range(1,8):
		if e % 3 == 0:
		total += e
	print(total)

> Q: add all multiples of 3 and 5 that are less than 100
total = 0
for e in range(1, 100):
	if e % 3 == 0 or e % 5 == 0:
	total += e
print(total)

>Q: At what index does the value 9 occur
	vals = [4,3,7,8,9,2,1]
	answer = 0
	for index in range(len(vals)):
	if vals[index] == 9:
	answer = index
	break
	print(answer)

>Q: #create a function that takes a list and a number as a parameter and 
# prints the index at which the number occurs in the list 

				def get_index(list, number):
						for index in range(len(list)):
								if list[index] == number: 
										return index 
				arb_list = [4, 2, 9, 2, 5, 8]
				result = get_index(arb_list,8)
				print(result)
				
				
------------------------------------------NOTE ABOUT DISTINCTION BETWEEN FOR-EACH AND STANDARD FOR-LOOP----------------------------------------------- 
Iterating over lists and adding elements optimizations:

>Two iteration methods
1) if you don't specify the list you're iterating over, and only choose a range, item is an index.
sum = 0;
list = [3, 3, 3];
for item in range(0, len(list)):
sum = sum + list[item];
print(sum);

2) if you do specify the list you're iterating over, item becomes the actual element.
seq = [1,1,1,1,2]
sum = 0
for item in seq:
sum = sum + item
print(sum)

Therefore, since item can act as an index in some cases and an actual item in others, it is beneficial for one to name the "item" component "index" 
when dealing with figure 1 since item acts as an index in that case.

sum = 0;
list = [3, 3, 3];
for index in range(0, len(list)):
sum = sum + list[index];
print(sum);


Note that the for the range parameters, 0 is implied. Therefore, the syntax can be simplified to:
sum = 0;
list = [3, 2, 3];
for index in range( len(list)):
sum = sum + list[index];
print(sum);
-------------------------------------------------------------------------------------------------------------------------------------------
